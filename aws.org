# -*- mode: org; fill-column: 79; -*-

#+TITLE: AWS
#+SUBTITLE: Fundamentals of Developing and Computing in the Cloud
#+AUTHOR: WLHarvey4
#+DATE: \today

#+MACRO: version 0.0.5
#+MACRO: modification <2018-12-15 Sat 16:22>
#+OPTIONS: H:4
#+TEXINFO_FILENAME:aws.info
#+TEXINFO_CLASS: info
#+TEXINFO_HEADER:
#+TEXINFO_POST_HEADER:
#+SUBAUTHOR:
#+TEXINFO_DIR_CATEGORY: AWS
#+TEXINFO_DIR_TITLE: Computing with AWS
#+TEXINFO_DIR_DESC: Courses from Coursera and edX
#+TEXINFO_PRINTED_TITLE: Computing with AWS

#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE:
#+LATEX_COMPILER: pdflatex

Version {{{version}}} {{{time(%F %R)}}}

* AWS Developer
  This is a three-course series on developing on AWS.
** Building on AWS
[[https://www.edx.org/course/aws-developer-building-on-aws][Building on AWS]]

In this course, part of the AWS Developer Professional Series, you
will gain confidence developing and deploying applications on the AWS
platform. Throughout the course, working in Python on Linux, you will
develop a web application building upon your developer skills and
using AWS services and tools.

Your AWS instructors will guide you through getting started with AWS,
creating an account, and installing SDKs. Throughout the course, we
will use hands-on exercises to build out a web application. In the
class, we will utilize the AWS Free Tier to minimize any costs
associated with running your application.

You will use both the Amazon EC2 and AWS Lambda compute services, as
well as learn about object stores by saving and accessing images and
video in Amazon S3. You will use Amazon Rekognition to analyze images
and video. Collected data will be managed using the Amazon Relational
Database Service (RDS). You will refactor your application along the
way, increase availability using load balancing, and improve
performance and durability using messaging and queuing with the AWS
SNS messaging service and Amazon SQS queuing service.

Throughout the class, your instructors will introduce you to general
AWS concepts such as Regions, Availability Zones, Virtual Private
Clouds (VPCs), and Security Groups. You will use the AWS service APIs
programmatically via AWS SDKs, the AWS CLI, and the AWS Cloud9 IDE.

 - How to create and manage an AWS account
 - AWS fundamental concepts including Regions, Availability Zones, and
   Virtual Private Clouds (VPCs)
 - How to install and use the AWS SDKs
 - How to use AWS compute services, both via the AWS Console and
   programmatically
 - How to use AWS managed services such as Amazon RDS
 - How to use Amazon AI image and text-to-speech applications
 - How to make your applications more durable, distributed, and highly
   available

*** About the Course
This is the first course in the AWS Developer series.  This course is
designed to run over 6 weeks, but is self-paced.  As part of this
course, there will be hands-on exercises where you will get the
opportunity to use AWS services to build an application.  You will do
this using an AWS account that you will create as part of the first
week exercise.

#+BEGIN_QUOTE
[Russell] Do you currently work in software?
Are you looking to build your AWS knowledge?
This is the course for anyone to gain knowledge
in the AWS services, SDKs and APIs.
Over six weeks we will build a Python Flask app on Linux
where we'll use this application
to answer many of the questions about AWS Services.
You get hands on with Services
and get the application up and running
in your own environment.
Together we will answer some common questions along the way.
Which compute services do I use
for my application?
How do I solve my storage and database requirements?
How will security or authentication work
in those services?
Or when users talk to my application?
How can the many parts of my application
be integrated using messaging queues and notifications?
I'll be joined by my colleagues, Heiwad and Kai
from AWS Training.
So, come join us for this six-week developer-focused journey
into Amazon Web Services.
#+END_QUOTE
**** Syllabus
     1. [[Week One][Week One]]
        A. [[Welcome to the Course][Welcome to the Course]]
           - Welcome to Building on AWS
           - Meet the Instructors
           - Project Intro---What is being Built
           - Intro to Week 1
        B. [[Getting Started on AWS][Getting Started on AWS]]
           - Why Build on AWS Cloud
           - AWS Free Tier
           - Exercise 1---Creating an AWS Account
           - Service Oriented Architectures and APIs in AWS
           - Exercise 2---Hello Amazon EC2
        C. [[Cloud Infrastructure and Responsibility][Cloud Infrastructure and Responsibility]]
           - Understanding AWS Structure
           - Networking---Amazon Virtual Private Cloud (VPC)
           - AWS vs. Developer Responsibility in the Cloud
           - EC2 Metadata
           - Exercise 3---Logs-SSH-Instance Metadata
        D. Resources
     2. Week Two
        A. Invoking AWS APIs/ AWS Identity and Access Management (IAM)
           - Create an AWS IAM user/access key video
           - Exercise 4---AWS IAM User-CLI-Boto-Access Keys
           - AWS APIs
        B. Amazon S3
           - Intro to Amazon S3
           - Amazon S3 Access Control
        C. Working with our Development Environment
           - Developing on AWS Cloud
           - Exercise 5---AWS Cloud 9
        D. Amazon Rekognition
           - Introduction to Amazon Rekognition
           - Exercise 6---Amazon Rekognition
        E. Resources
     3. Week Three
        A. Storing Structured Data using AWS Managed Databases
           - AWS IAM Roles
           - Amazon Relational Database Service
           - Exercise 7---Amazon RDS
        B. Availability and Application Failure
           - Availability
           - What could go wrong
           - Elastic Load Balancer
           - Exercise 8---Deploy an instance add ALB
        C. Resources

*** Week One

**** Welcome to the Course

***** Welcome to Building on AWS

  #+BEGIN_QUOTE
  Hello and welcome
  to the AWS Developer Professional series.
  I'm Russell Sayers, a technical architect
  in the AWS training and certification team.
  I'll be leading you over the course
  over the next six weeks
  with two other instructors
  you will meet shortly.
  Building on AWS is the first of three courses
  with a development focus.
  This is the course for someone working in software
  who wants to build their AWS knowledge.
  If you love software
  and you want to take your first steps
  in the AWS cloud, then this is the course for you
  or maybe you have worked with AWS services
  and are looking to build upon your knowledge,
  so join us whether you're about to start
  on your next software project
  hosted in AWS or just looking
  to build your skills.
  Throughout the course we will build a small web application
  with Python Flask and Linux.
  As the course progresses,
  we'll address new challenges
  and features in the application
  and work with a series of AWS services
  to improve and refactor the application.
  We start the course with the fundamentals.
  First you create an account,
  then let's start building.
  We can take advantage of the very generous AWS free tier.
  We've made the decision the application
  will use Python Flask,
  so we plan to turn on compute resources
  running Linux to host our application.
  We look at how to talk to many of the AWS services
  from our applications using the APIS
  or the many SDKs available
  for lots of languages.
  In the course exercises,
  we work with the code in AWS Cloud9,
  the browser-based IDE
  but this is up to you.
  Anyone with a background in Python
  and a little extra exploration,
  the exercises can be completed
  in the editor of your choice.
  Just about every application I have worked on
  has storage requirements.
  In our first week we'll complete
  a simple application
  that can store images on Amazon S3,
  a fundamental AWS storage service.
  We extend the application
  to store relational data
  in a MySQL database
  operated by Amazon Relational Database Service.
  From there we look at many AWS services
  to solve problems like deployment,
  how are users going to sign into the application,
  distributed tracing,
  serverless compute, messaging queues
  and pub-sub messaging.
  The time commitment
  for this self-paced course is roughly three to four hours
  a week over six weeks.
  The course is designed for those
  that have one or more years software experience.
  The majority of the code
  is written and supplied.
  If you're experienced with Python programming
  there are optional suggested enhancements
  and you are most definitely welcome
  to alter and improve upon the application code.
  In fact, we encourage this
  and we would love to see your code updates
  in the course discussion forums.
  So, let's get started with the course.
  #+END_QUOTE

***** Meet the Instructors

  #+BEGIN_QUOTE
  Hey I'm Kai Dupe,
  I'm a technical trainer for Amazon Web Services.
  I've been in software development for about 30 years.

  Hi, my name is Russell Sayers, I am a technical architect
  in the training and certification team.
  I've been working in software for 20 years,
  I've been at Amazon for five years,
  and AWS for three and a half years.

  Hi, my name is Heiwad Osman,
  and I'm a technical trainer with Amazon Web Services.
  I've been working with software development teams
  for a little over 10 years.
  Kai, Russ, and I will see you in the class soon.
  #+END_QUOTE

***** Project Intro---What is being Built

Will be building a Python Flask web application to upload and store
images in a database.  It will have a user signup, with user
registration, password, email validation, forgotten password resets,
and secure user directory.  There will also be structured data for the
owner and image description.  The labels for the photos will be
generated automatically, which will require computer vision and deep
learning algorithms.  Finally, the web app will print the photos,
which will require communicating with the user's resources.  We will
troubleshott performance issues and errors, and collect telemetry data
to create a map of the services used by the application.

****** Lecture
 #+BEGIN_QUOTE
 Let's take a sneak peak at the application
 we plan to build over the next six weeks
 and get a quick look behind the scenes.
 Like a lot of web applications
 our users will be signing up
 to access the application
 and this comes with some pretty standard requirements,
 a secure user directory, user registration,
 password requirements, email validation,
 forgotten password resets,
 just to name a few.
 Once you're inside the application,
 you can upload a photo with a description.
 The application stores your collection of images,
 so we have some storage requirements
 for the image files
 plus structured data for the photo owner and description.
 Along with the description of the photo,
 we are storing automatically generated labels for each image
 and these labels are not created by a human,
 we need computer vision and deep learning algorithms
 integrated into our application
 and for one extra requirement
 we plan to print the photos for our application customers.
 We now have the need to communicate
 the application's upload event
 back to our on premises for processing and printing.
 As we get ready for production,
 we need to identify and troubleshoot
 the root cause of performance issues and errors.
 Let's collect this telemetry data
 from a sampling of application requests
 and we can use this to build a map of the services
 used by the application
 to take latency and identify any errors.
 Now we can jump into the application.
 I have a build ready to go on my laptop here.
 This is the front page.
 I can click through to the log in
 and from the log in screen
 I also have the ability to sign up for the application.
 I have already signed up,
 so I can jump back and sign in.
 Once I'm signed in,
 there's access to the My Photos
 which is the place where I can upload the photos.
 I can also access that from my phone,
 so let's try that from my phone.
 I'm going to take a selfie here in the studio,
 so let's take a photo,
 flip the camera around for the selfie mode
 and pose,
 snap and upload.
 That's being uploaded
 and on my left here
 is a screen representing our on-premises processing.
 Remember, the event of the upload
 is being communicated back to our on premises
 being represented by our Raspberry pi here
 and we now have our application
 where we need it for processing
 and back to the laptop,
 if I reload the My Photos screen,
 we can see exactly the photo I just took
 and we can also see some labels
 that were attached by that deep learning algorithm.
 It's telling me that I'm a human,
 I'm a people, I'm a person,
 I have glasses, that sounds good to me.
 So, that's a very, very quick introduction
 to the app that we will be building
 over the next six weeks through this course.
 #+END_QUOTE

***** Intro to Week 1

***** Objectives for Week One
#+BEGIN_QUOTE
[Instructor] At the end of week one,
we will have turned on an EC2 instance.
This instance is where we have our Linux operating system
and that's where we will be hosting our application.
There's a few other icons on here
and we will come back to those in the following weeks.
So let's get started building.
#+END_QUOTE

***** Lecture for Intro to Week One
#+BEGIN_QUOTE
- Welcome to week one.
Week one is let's get you started.
We want to get you up and running in the AWS Cloud.
You will first create an account
and learn about the AWS free tier.
With the free tier, there is both 12 month free
and always free usage on a lot of our services.
Week one is focused on infrastructure concepts,
defining where things live in the AWS Cloud.
Some of these concepts might already be familiar
from your current work.
We can see how the same concepts apply in AWS.
This is the week where we get our first look at Amazon EC2,
our web service to provide secure,
re-sizable compute capacity.
The application we're building through the course
will need a place to run the Linux operating system.
With EC2, we can create the virtual instance
where this will run.
We will also learn about the metadata security
and networking features available to EC2.
Once we have our Linux instance running,
we can perform some remote administration.
We do this by using SSH to connect to our instance.
So without further ado, let's get started.
#+END_QUOTE

**** Getting Started on AWS

**** Cloud Infrastructure and Responsibility
*** Week Two
*** Week Three

** Deploying on AWS
[[https://www.edx.org/course/aws-developer-deploying-on-aws][Deploying on AWS]]
Get hands-on training from AWS staff to deploy applications on the AWS
platform.

In this course, part of the AWS Developer Professional Series, you
will learn how to use DevOps methodologies and tools. You will build
and test your application using AWS Cloud9, and deploy to your
cloud-based infrastructure with AWS Elastic Beanstalk. You will create
a continuous integration/continous delivery (CI/CD) pipeline using AWS
CodeBuild, AWS CodeCommit, and AWS CodePipeline.

You will monitor your application and deployment using Amazon
Cloudwatch, and create dashboards using Amazon Elasticsearch and
Kibana to gather and catalog performance metrics.

This course will have a significant hands-on component. Throughout the
class, you will perform exercises using the AWS services covered. The
exercises will utilize the AWS Free Tier to minimize any costs
associated with running your application.

 - How to use AWS developer tools including AWS Elastic Beanstalk, AWS
   CloudFormation, AWS CodeBuild, AWS CodeDeploy, and AWS
   CodePipeline.
 - How to use AWS tools to monitor your development and production
   environments. How to monitor application performance using AWS
   tools including Amazon CloudWatch and Amazon Elasticsearch
 - How to automate the development/staging/production process

** Optimizing on AWS
[[https://www.edx.org/course/aws-developer-optimizing-on-aws][Optimizing on AWS]]
This course, part of the AWS Developer Professional Series, will focus
on what you need to know to help you optimize your applications and
optimize how you work in AWS.

You will look at ways to improve utilization by using containers with
the Amazon Elastic Container Service (Amazon ECS), caching services
such as Amazon CloudFront and Amazon ElastiCache, and monitoring tools
such as Amazon CloudWatch. You will look at serverless architectures
using Amazon DynamoDB, Amazon API Gateway and, AWS Lambda. You will
explore the AWS Command Line Interface (CLI), AWS Identity and Access
Management (IAM) and learn how to use the AWS Key Management Service
(KMS). You will finish off the class with a deep dive into AWS
CloudFormation and a capstone exercise where you will debug a
CloudFormation template.

This course will have a significant hands-on component. Throughout the
class, you will perform exercises using the AWS services covered. The
exercises will utilize the AWS Free Tier to minimize any costs
associated with running your application.

 - How to use AWS Container Services
 - How to improve application performance through techniques such as
   caching
 - How to optimize your applications by using serverless technologies
   and autoscaling.
 - How to use content distribution to improve the end-user experience
 - How to use the AWS Command Line Interface (CLI)
 - How to encrypt data at rest and in transit using the AWS Key
   Management Service

* AWS Fundamentals --- Going Cloud-Native
   This course will introduce you to Amazon Web Services (AWS) core services
   and infrastructure. Through demonstrations you'll learn how to use and
   configure AWS services to deploy and host a cloud-native application.

** About
   Early in the course, your AWS instructors will discuss how the AWS cloud
   infrastructure is built, walk you through Amazon Elastic Compute Cloud
   (Amazon EC2) and Amazon Lightsail compute services. They'll also introduce
   you to networking on AWS, including how to set up Amazon Virtual Public
   Cloud (VPC) and different cloud storage options, including Amazon Elastic
   Block Storage (EBS), Amazon Simple Storage Service (S3) and Amazon Elastic
   File Service (EFS). Later in the course you'll learn about AWS Database
   services, such as Amazon Relational Database Service (RDS) and Amazon
   DynomoDB. Your instructors will also walk you through how to monitor and
   scale you application on AWS using Amazon CloudWatch and Amazon EC2 Elastic
   Load Balancing (ELB) and Auto Scaling. Lastly, you'll learn about security
   on AWS, as well as how to manage costs when using the AWS cloud platform.

   In this course, you won't be required to complete hands-on exercises, but we
   strongly suggest you take advantage of the AWS Free Tier to follow along as
   the instructors demonstrate the AWS services. Class forums will also allow
   you to ask questions and interact with AWS training instructors. After
   completing this course, you'll have the basic fundamentals to get started on
   AWS.

   This course has been developed by AWS, and is delivered by AWS technical
   instructors who teach cloud computing courses around the globe.

*** What You Will Learn
    + Learn AWS fundamental concepts including Regions, Availability Zones, and
      Virtual Private Clouds (VPCs)
    + How to make an applications durable, distributed, and highly available
    + Learn how to use AWS compute, storage, database, and security services
      via the AWS Console
*** Skils You Will Gain
    + Cloud Computing Security
    + AWS Cloud
    + Cloud Storage
    + Cloud Networking
    + Cloud Computing
** Syllabus
*** Week 1 --- Introduction • Infrastructure • Compute
**** Videos
     + Welcome to AWS Fundamentals: Going Cloud-Native2m
     + Meet the Instructors1m
     + AWS Overview4m
     + AWS Infrastructure Part 15m
     + AWS Infrastructure Part 22m
     + What is our Sample App?2m
     + Introduction to Compute Services on AWS3m
     + Amazon Elastic Compute Cloud (EC2)3m
     + Creating a (Web Server) Using Amazon EC26m
     + Introduction to Amazon Lightsail1m
     + Amazon Lightsail Demonstration2m
**** Readings
     + Course Welcome Notes5m
     + AWS Overview Notes10m
     + AWS Infrastructure Notes5m
     + Compute Services Notes10m
     + Amazon EC2 Notes10m
     + Amazon Lightsail Notes10m
*** Week 2 --- Networking and Storage on AWS
**** Videos
     + Introduction to Module 2: Networking and Storage52s
     + Amazon Virtual Private Cloud (VPC) Part 110m
     + Amazon Virtual Private Cloud (VPC) Part 212m
     + Introduction to Storage on AWS2m
     + Amazon Elastic Block Store (Amazon EBS)3m
     + Amazon Simple Storage Service (Amazon S3)3m
     + Amazon S3 Demonstration3m
     + Amazon Elastic File System (Amazon EFS)1m
**** Readings
     + Networking on AWS Notes30m
     + Amazon EBS Notes15m
     + Amazon S3 Notes15m
     + Amazon EFS Notes10m
*** Week 3 --- Databases on AWS
**** Videos
     + Introduction to Module 3: Databases1m
     + BYODB vs Amazon RDS2m
     + Amazon RDS in Detail6m
     + Amazon DynamoDB2m
     + Amazon DynamoDB Demonstration3m
**** Readings
     + Amazon RDS Notes15m
     + Amazon DynamoDB Notes15m
*** Week 4 --- Monitoring and Scaling
**** Videos
     + Introduction to Module 4: Monitoring and Scaling Our Application1m
     + Monitoring and Amazon CloudWatch4m
     + Load Balancing2m
     + Auto Scaling11m
**** Readings
     + Monitoring and Amazon CloudWatch Notes20m
     + Amazon EC2 Elastic Load Balancing Notes15m
     + Amazon EC2 Auto Scaling Notes15m
*** Week 5 --- Security • Cost Management • Course Conclusions
**** Videos
     + Introduction to Module 5: Security and Cost Management1m
     + Security in AWS4m
     + Cost Management in AWS4m
     + Course Wrap Up1m
**** Readings
     + Security in AWS Notes15m
     + Cost Management on AWS Notes15m
     + For More Information10m
** Modules
*** Week 1 --- Introduction • Infrastructure • Compute
In this Module, you will be introduced to the course and learn about AWS
services, infrastructure, and compute services.

 + Learning Objective
   - Describe AWS Regions and Avalibility Zones
   - Describe how to use Amazon EC2
   - Explain what is Amazon LightSail

**** Introduction

***** Welcome
      Throughout this class, there will be additional optional and required
      reading, and other resources. Required readings and resources will be
      marked as such in the resource section that follows each section.

      There is no hands-on requirement to complete this course.

      That said, the best way to learn is to do.

      While this class doesn't have any specific hands-on assignments that are
      associated with it, we strongly suggest that you take advantage of the
      [[https://aws.amazon.com/free/?awsf.Free%2520Tier%2520Types=categories%2523featured][AWS Free Tier]] to explore Amazon Web Services (AWS). As we dive into each
      of the services covered in this class, there will be links to
      documentation where you can find example applications and code samples
      that you can try.

      Be aware that the sample application that's described in this class is
      designed to describe concepts. We do not provide the code behind the
      application and we will not cover in detail every facet of the
      application.

**** Infrastructure

***** What Is Cloud Computing
:CI:
#+CINDEX: cloud computing
:END:
      Cloud computing is the on-demand delivery of compute power, database
      storage, applications, and other IT resources through a cloud services
      platform via the internet with pay-as-you-go pricing.

      Additional information is available at: https://aws.amazon.com/what-is-cloud-computing/.

****** Six Advantages and Benefits of Cloud Computing
       + Trade capital expenses for variable expense
       + Benefit from massive economies of scale
       + Stop guessing capacity
       + Increase speed and agility
       + Stop spending money on running and maintaining data centers
       + Go global in minutes

****** Deployment Methods
:CI:
#+CINDEX: deployment
:END:
       There is a range of deployment models, from all on-premises to fully
       deployed in the cloud. Many users begin with a new project in the cloud,
       and they might integrate some on-premises applications with these new
       projects in a hybrid architecture. They might decide to keep some legacy
       systems on-premises. Over time, they might migrate more and more of
       their infrastructure to the cloud, and they might eventually reach an
       all-in-the-cloud deployment.

       Details can be found at: https://aws.amazon.com/types-of-cloud-computing/.

****** Products and Services
:CI:
#+CINDEX: cloud services
#+CINDEX: cloud products
#+CINDEX: compute
#+CINDEX: storage
#+CINDEX: database
#+CINDEX: analytics
#+CINDEX: networking
:END:
       AWS offers a broad set of global cloud-based products, including
       compute, storage, databases, analytics, networking, mobile, developer
       tools, management tools, Internet of Things (IoT), security, and
       enterprise applications.

       Details can be found at: https://aws.amazon.com/products/.

****** AWS Partner Network --- APN
       APN Partners are focused on your success, and they help customers take
       full advantage of all the business benefits that AWS has to offer.

       More details about accessing the AWS Partner Network--or becoming an AWS
       Partner--can be found at: https://aws.amazon.com/partners/.

****** AWS Marketplace
       The AWS Marketplace is a digital catalog with thousands of software
       listings from independent software vendors, where you can find, test,
       buy, and deploy software to run on AWS.

       These offerings can range from simple web server applications to
       security, networking business intelligence, databases, DevOps, and
       media. Many of these applications offer pay-as-you-go or Bring Your Own
       License (BYOL) models.

       Details on the AWS Marketplace can be found at:
       https://aws.amazon.com/marketplace.

***** AWS Infrastructure
      The AWS Cloud infrastructure is built around Regions and Availability
      Zones. AWS Regions provide multiple, physically separated, and isolated
      Availability Zones that are connected with low latency, high throughput,
      and highly redundant networking.

      As of the time of publication, the AWS Cloud spans 55 Availability Zones
      within 18 geographic Regions and 1 Local Region around the world. There
      are announced plans for 15 more Availability Zones and five more Regions
      in Bahrain, Hong Kong SAR, Sweden, and South Africa; and a second AWS
      GovCloud Region in the US.

      There is a Local Region in Osaka, Japan (Osaka-Local). An AWS Local
      Region is a single data center that is designed to complement an existing
      AWS Region. It is available to select AWS customers who request
      access. Customers who want to use the Asia Pacific (Osaka) Local Region
      should speak with their sales representative. Like all AWS Regions, AWS
      Local Regions are completely isolated from other AWS Regions.

      [[https://aws.amazon.com/about-aws/global-infrastructure/][Click here]] for the most current information.

      Each AWS Region has multiple, isolated locations that are known as
      Availability Zones. Amazon Relational Database Service (Amazon RDS)
      provides you with the ability to place resources (such as instances) and
      data in multiple locations. Resources aren't replicated across AWS
      Regions unless you do so specifically.

      Detailed information about Availability Zones can be found [[https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html][here]].

**** Compute

***** Compute Services Notes

      Building and running your application starts with compute, whether you
      are building enterprise, cloud-native, or mobile applications; or running
      massive clusters to sequence the human genome.

      AWS offers a comprehensive portfolio of compute services that allow you
      to develop, deploy, run, and scale your applications and workloads in the
      world’s most powerful, secure, and innovative compute cloud.

      Details about the full range of AWS compute services can be found here .

      Later in this module, you will learn about both Amazon Elastic Compute
      Cloud (Amazon EC2) and Amazon Lightsail. See those sections for more
      details.

      Both serverless computing and container services are beyond the scope of
      this class. We will cover these topics in subsequent courses, but the
      following descriptions provide an introduction to some of the key
      services for serverless computing and containers.

****** AWS Lambda

       AWS Lambda lets you run code without provisioning or managing
       servers. You pay only for the compute time you consume--there is no
       charge when your code isn't running. Additional information about Lambda
       can be found at: https://aws.amazon.com/lambda

****** AWS Container Services

       Amazon Elastic Container Service (Amazon ECS) is a highly scalable,
       high-performance container orchestration service that supports Docker
       containers. It allows you to run and scale containerized applications on
       AWS. You can find more details at: https://aws.amazon.com/ecs/

       Amazon Elastic Container Service for Kubernetes (Amazon EKS) makes it
       straightforward to deploy, manage, and scale containerized applications
       that use Kubernetes on AWS. Details can be found at:
       https://aws.amazon.com/eks/

       AWS Fargate is a compute engine for Amazon ECS and Amazon EKS that
       allows you to run containers without having to manage servers or
       clusters. You can find more information at:
       https://aws.amazon.com/fargate/

       Note that before you use any of these services, you should check whether
       they are eligible for the AWS Free Tier: https://aws.amazon.com/free


***** Amazon EC2 Notes

      Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides
      secure and resizable compute capacity in the cloud. It's designed to make
      web-scale cloud computing easier for developers.

      Amazon EC2 presents a true virtual computing environment, and it allows
      you to use web service interfaces to launch instances with a variety of
      operating systems, load them with your custom application environment,
      manage your network’s access permissions, and run your image by using as
      many or few systems as you want.

      Details on the features and cost of Amazon EC2 are available at:
      https://aws.amazon.com/ec2/

****** Amazon EC2 instance types

       Amazon EC2 provides a wide selection of instance types that are optimized
       to fit different use cases. Instance types comprise varying combinations
       of CPU, memory, storage, and networking capacity. They give you the
       flexibility to choose the appropriate mix of resources for your
       applications. Each instance type includes one or more instance sizes,
       which allows you to scale your resources to the requirements of your
       target workload. Current details about available instance types are
       available at: https://aws.amazon.com/ec2/instance-types/

***** Amazon Lightsail Notes

      Amazon Lightsail is the easiest way to get started with AWS for
      developers, small businesses, students, and other users who need a simple
      virtual private server (VPS) solution. Lightsail provides developers
      compute, storage, and networking capacity, and it also provides
      capabilities to deploy and manage websites and web applications in the
      cloud. Lightsail includes everything you need to launch your project
      quickly--a virtual machine, solid state drive (SSD)-based storage, data
      transfer, Domain Name System (DNS) management, and a static IP--for a
      low, predictable monthly price.

      A more detailed introduction from AWS re:Invent 2017 is available here:
      https://www.youtube.com/watch?v=29_LqYnomdg. Note that pricing has
      changed (decreased) since this video was created. Specific details are on
      the Lightsail web page.

      Details on Lightsail and the 30 day trial are available at:
      https://aws.amazon.com/lightsail/

      Lightsail pricing can be found here:
      https://aws.amazon.com/lightsail/pricing

*** Week 2 --- Networking and Storage on AWS
    In this Module you will learn about Networking and Storage on AWS.

     + Learning Objectives
       - Describe Networking on AWS
       - Differentiate between Object and Block Storage
       - Describe the different use cases for Amazon S3, Amazon EBS, Amazon EFS

*** Week 3 --- Databases on AWS
    In this module we will discuss Database Services on AWS.

    + Learning Objectives
      - Define database options on AWS
      - Distinguish between Bring your own and managed database solutions on
        AWS
      - Distinguish between SQL and NoSQL solutions on AWS
      - Define Amazon RDS
      - Define Amazon DynamoDB

*** Week 4 --- Monitoring and Scaling
    In this module, we will look at monitoring and scaling your application on
    AWS.

    + Learning Objectives
      - Define Monitoring your AWS environment with Amazon CloudWatch
      - Define load balancing and scaling on AWS

*** Week 5 --- Security • Cost Management • Course Conclusion
    In this module, we will look at security and cost management on AWS.

    + Learning Objectives
      - Describe the AWS Shared Security Model
      - Interpret the output of the AWS Cost Explorer and Trusted Advisor tools

